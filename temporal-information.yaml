openapi: 3.0.3
info:
  title: "expert.ai Temporal information detector"
  version: "v2"
  description: "Temporal information detector is the Natural Language API extension that detects time points, time spans and time intervals"
  contact:
    email: api.inquiry@expert.ai
    name: expert.ai
    url: 'https://expert.ai/'
externalDocs:
  description: API documentation
  url: 'https://docs.expert.ai/nlapi/v2/'
servers:
  - url: "https://nlapi.expert.ai/v2"
tags:
  - name: Information detection
paths:
  "/detect/temporal-information/{language}":
    post:
      summary: "Temporal information detection"
      tags:
        - Information detection
      parameters:
        - name: "language"
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'nlapi.yaml#/components/schemas/AnalysisRequest'            
      responses:
        "200":
          $ref: "#/components/responses/200TemporalInformationDetection"
        "400":
          description: Bad Request
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
        "413":
          description: "Request Entity Too Large"
        "500":
          description: "Internal Server Error"
      security:
        - bearerAuth: []          
components:
  securitySchemes:
    "bearerAuth":
      bearerFormat: JWT
      scheme: bearer
      type: http
  responses:
    200TemporalInformationDetection:
      description: "OK"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TemporalInformationResponse"
  schemas:
    TemporalInformationMatch:
      description: "An occurrence of a temporal information in the text"
      properties:
        "@id":
          description: "Unique identifier"
          type: string
        "start":
          description: "Zero-based position of the first character of the portion of text corresponding to the information occurrence"
          format: int64
          type: integer
        "end":
          description: "Zero-based position of the first character after the last of the portion of text corresponding to the information occurrence"
          format: int64
          type: integer
        "sentence":
          description: "Zero-based index of the item of the sentences array representing the sentence in which the occurrence of the information was found"
          format: int64
          type: integer
        "derived":
          description: "Present and true if the match was derived from other temporal information"
          type: boolean
        "referenceTimePoint":
          description: "In the case of derived time point, the value of the @id property of another information item representing the base time point"
          type: string
        "referenceTimeSpan":
          description: "In the case of derived time point, the value of the @id property of another information item representing the time span that was added to or subtracted from the base time point"
          type: string
        "indefiniteQuantity":
          description: "In case of time spans with indefinite quantity, the portion of text expressing the quantity, for example 'some'"
          type: string
        "duration":
          description: "In case of time spans that represent a duration, the portion of text expressing the duration, for example 'for'"
          type: string
        "text":
          description: "Portion of text corresponding to the information occurrence"
          type: string
    TemporalInformationItem:
      description: "An item carrying temporal information"
      properties:
        "@id":
          description: "Unique identifier"
          type: string
        "@type":
          description: "JSON-LD graph item type"
          type: string
        "name":
          description: "Temporal information expression type, can be 'TimePoint', 'TimeSpan' or 'TimeInterval'"
          type: string
        "value":
          description: "Normalized information"
          type: string
        "matches":
          description: "Occurrences of the information in the text"
          type: array
          items:
            $ref: "#/components/schemas/TemporalInformationMatch"
    TemporalInformationJSONLD: 
      description: "JSON-LD format output"
      properties:
        "@context":
          description: "JSON-LD context"
        "@graph":
          type: object
          description: "JSON-LD graph data"
          properties:
            "@id":
              description: "Detector's name"
              type: string
            "items":
              description: "Temporal information items"
              type: array
              items:
                $ref: "#/components/schemas/TemporalInformationItem"
    TemporalInformationExtraData:
      description: "Temporal Information Extra Data"
      properties:
        "JSON-LD":
          $ref: "#/components/schemas/TemporalInformationJSONLD"
    TemporalInformationDocument:
      description: "Temporal Information Document properties"
      properties:
        extraData:
          $ref: "#/components/schemas/TemporalInformationExtraData"
    TemporalInformationResponse:
      description: "Detector's response"
      properties:
        "success":
          description: "Success flag"
          type: boolean
        "error":
          $ref: 'nlapi.yaml#/components/schemas/ServiceError'
        "data":
          allOf:
            - $ref: "nlapi.yaml#/components/schemas/DetectorBaseDocument"
            - $ref: "#/components/schemas/TemporalInformationDocument"                 
